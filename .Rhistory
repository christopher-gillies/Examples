require(MASS)
S = matrix(c(1,0.5,0.5,1),ncol=2)
x = mvrnorm(n = 1000, mu=0, Sigma=S)
knitr::opts_chunk$set(echo = TRUE)
S = matrix(c(1,0.5,0.5,1),ncol=2)
x = mvrnorm(n = 1000, mu=c(0,0), Sigma=S)
x
plot(x[,1],x[,2])
?eigen
e.decomp = eigen(S)
e
e.decomp
e.decomp$vectors %*% diag(e.decomp$values)
e.decomp$vectors %*% diag(e.decomp$values) %*% e.decomp$vectors
e.decomp$vectors %*% diag(e.decomp$values) %*% t(e.decomp$vectors)
dim(x)
e.decomp$vectors
x.proj = e.decomp$vectors %*% t(x)
plot(x.proj[,])
x.proj
e.decomp$vectors
e.decomp$vectors %*% t(e.decomp$vectors)
e.decomp$vectors == t(e.decomp$vectors)
x.proj = t(e.decomp$vectors %*% t(x))
plot(x.proj[,1],x.proj[,2])
e.decomp = eigen(S)
e.decomp$vectors %*% diag(e.decomp$values) %*% t(e.decomp$vectors)
x.proj = e.decomp$vectors %*% t(x)
plot(x.proj[,1],x.proj[,2])
dim(x.proj)
dim(x)
x.proj = x %*% e.decomp$vectors
plot(x.proj[,1],x.proj[,2])
plot(x[,1],x[,2])
plot(x.proj[,1],x.proj[,2])
cor(x.proj[,1],x.proj[,2])
cov(x)
S = matrix(c(1,0.75,0.75,1),ncol=2)
x = mvrnorm(n = 1000, mu=c(0,0), Sigma=S)
plot(x[,1],x[,2])
e.decomp = eigen(S)
e.decomp$vectors %*% diag(e.decomp$values) %*% t(e.decomp$vectors)
x.proj = x %*% e.decomp$vectors
plot(x.proj[,1],x.proj[,2])
require(ggplot2)
x.proj = x %*% e.decomp$vectors
ggplot(data.frame()) + geom_point(aes(x=x.proj[,1],y=x.proj[,2]))
v
x.proj = x %*% e.decomp$vectors
ggplot(data.frame()) + geom_point(aes(x=x.proj[,1],y=x.proj[,2])) + scale_x_continuous(limits=c(-4,4))  + scale_y_continuous(limits=c(-4,4))
ggplot(data.frame()) + geom_point(aes(x=x[,1],y=x[,2])) + scale_x_continuous(limits=c(-4,4))  + scale_y_continuous(limits=c(-4,4))
var(e.decomp$vectors)
e.decomp$values
var(x.proj[1,])
var(x.proj[2,])
var(x.proj[,1])
var(x.proj[,2])
S.sample = cov(x)
S.sample
S.sample = cov(x)
e.decomp = eigen(S.sample)
e.decomp$vectors %*% diag(e.decomp$values) %*% t(e.decomp$vectors)
x.proj = x %*% e.decomp$vectors
ggplot(data.frame()) + geom_point(aes(x=x.proj[,1],y=x.proj[,2])) + scale_x_continuous(limits=c(-4,4))  + scale_y_continuous(limits=c(-4,4))
var(x.proj[,1])
var(x.proj[,2])
e.decomp$vectors
var(x.proj[,1])
var(x.proj[,2])
e.decomp$values
var(x.proj[,1])
var(x.proj[,2])
svd.data = svd(S.sample)
svd.data
e.decomp
?svd
x.center = scale(x,scale = FALSE)
x.center
svd.sample.cov = svd(S.sample)
x.center = scale(x,scale = FALSE)
svd.x = svd(x.center)
svd.x
dim(x.center)
x.center %*% svd.x$v
svd.x$v
svd.sample.cov = svd(S.sample)
svd.sample.cov$u
svd.sample.cov$v
x.proj.2 = x.center %*% svd.x$v
x.proj.3 = x.center %*% svd.sample.cov$u
plot(x.proj.2[,1],x.proj.3[,1])
plot(x.proj.2[,2],x.proj.3[,2])
svd.x$u
svd.x$d
sqrt(svd.x$d)
svd.sample.cov$d
svd.sample.cov$d^2
plot(svd.sample.cov$d,svd.x$d)
svd.sample.cov$d/svd.x$d
plot(svd.sample.cov$d^2,svd.x$d)
svd.sample.cov$d^2/svd.x$d
svd.sample.cov$d^2
svd.sample.cov$d
svd.x$d^2
svd.x$d^2 / (1000 - 1)
x.scaled = scale(x)
cov.scaled.x = cov(x)
cov.scaled.x
S.sample
x
var(x[,1])
var(x[,2])
S = matrix(c(1,0.75,0.75,2),ncol=2)
x = mvrnorm(n = 1000, mu=c(0,0), Sigma=S)
S.sample = cov(x)
e.decomp = eigen(S.sample)
e.decomp$vectors %*% diag(e.decomp$values) %*% t(e.decomp$vectors)
x.proj = x %*% e.decomp$vectors
ggplot(data.frame()) + geom_point(aes(x=x.proj[,1],y=x.proj[,2])) + scale_x_continuous(limits=c(-4,4))  + scale_y_continuous(limits=c(-4,4))
e.decomp$values
var(x.proj[,1])
var(x.proj[,2])
svd.sample.cov = svd(S.sample)
x.center = scale(x,scale = FALSE)
svd.x = svd(x.center)
x.proj.2 = x.center %*% svd.x$v
x.proj.3 = x.center %*% svd.sample.cov$u
plot(x.proj.2[,1],x.proj.3[,1])
plot(x.proj.2[,2],x.proj.3[,2])
svd.x$d^2 / (1000 - 1)
svd.sample.cov$d
x.scaled = scale(x)
cov.scaled.x = cov(x)
cov.scaled.x
x.scaled = scale(x)
cov.scaled.x = cov(x.scaled)
cov.scaled.x
S.sample
ggplot(data.frame()) + geom_point(aes(x=x.scaled[,1],y=x.scaled[,2])) + scale_x_continuous(limits=c(-4,4))  + scale_y_continuous(limits=c(-4,4))
ggplot(data.frame()) + geom_point(aes(x=x[,1],y=x[,2])) + scale_x_continuous(limits=c(-4,4))  + scale_y_continuous(limits=c(-4,4))
scaled.svd = svd(cov.scaled.x)
v
x.scaled %*% scaled.svd$v
var(x.scaled[,1])
var(x.scaled[,2])
scaled.svd$u
scaled.svd$v
scaled.svd$d
cov.scaled.x
cor(x)
var(x[,2])
var(x[,1])
svd.sample.cov$d
scaled.svd$d
2.2609428 / 0.6172154
1.4933438 / 0.6172154
svd.sample.cov$v
scaled.svd$v
svd.xt = svd(cov(t(x)))
svd.xt
cov.xt = cov(t(x))
dim(cov.xt)
head(cov.xt)
cov.xt[1:10,1:10]
svd.cov.xt = svd(cov.xt)
dim(svd.cov.xt$d)
svd.cov.xt$d
svd.cov.xt$u
dim(svd.cov.xt$u)
dim(svd.cov.xt$v)
x.proj.white = x.center %*% svd.sample.cov$u %*% solve(svd.sample.cov$d)
x.proj.white = x.center %*% svd.sample.cov$u %*% solve(diag(svd.sample.cov$d))
x.proj.white
plot(x.proj.white[,1],x.proj.white[,2])
x.proj.white = x.center %*% svd.sample.cov$u %*% solve(diag(sqrt(svd.sample.cov$d)))
plot(x.proj.white[,1],x.proj.white[,2])
x.proj.2 = x.center %*% svd.x$v
x.proj.3 = x.center %*% svd.sample.cov$v
plot(x.proj.2[,1],x.proj.3[,1])
plot(x.proj.2[,2],x.proj.3[,2])
plot(x.proj.2[,1],x.proj.3[,1])
x.proj.white = x.center %*% svd.sample.cov$v %*% solve(diag(sqrt(svd.sample.cov$d)))
x.proj.white = x.center %*% svd.sample.cov$v %*% solve(diag(sqrt(svd.sample.cov$d)))
var(x.proj.white[,1])
var(x.proj.white[,2])
x.proj.white = x.center %*% svd.sample.cov$v %*% solve(diag(sqrt(svd.sample.cov$d)))
var(x.proj.white[,1])
var(x.proj.white[,2])
ggplot(data.frame()) + geom_point(aes(x=x.proj.white[,1],y=x.proj.white[,2])) + scale_x_continuous(limits=c(-4,4))  + scale_y_continuous(limits=c(-4,4)) + ggtitle("Whitening Transfrom")
svd.sample.cov$u %*% diag(sqrt(svd.sample.cov$d)) %*% t(svd.sample.cov$v)
w_sqrt = svd.sample.cov$u %*% diag(sqrt(svd.sample.cov$d)) %*% t(svd.sample.cov$v)
w_inv_sqrt = solve(w_sqrt)
w_inv_sqrt
w_inv_sqrt = solve(w_sqrt)
w_inv_sqrt.2 = svd.sample.cov$u %*% solve(diag(sqrt(svd.sample.cov$d))) %*% t(svd.sample.cov$v)
w_inv_sqrt
w_inv_sqrt.2
x.proj.white.2= x.center %*% w_inv_sqrt.2
w_sqrt = svd.sample.cov$u %*% diag(sqrt(svd.sample.cov$d)) %*% t(svd.sample.cov$v)
w_inv_sqrt = solve(w_sqrt)
w_inv_sqrt.2 = svd.sample.cov$u %*% solve(diag(sqrt(svd.sample.cov$d))) %*% t(svd.sample.cov$v)
x.proj.white.2= x.center %*% w_inv_sqrt.2
ggplot(data.frame()) + geom_point(aes(x=x.proj.white.2[,1],y=x.proj.white.2[,2])) + scale_x_continuous(limits=c(-4,4))  + scale_y_continuous(limits=c(-4,4)) + ggtitle("Whitening Transfrom 2")
x.proj.white.2
ggplot(data.frame()) + geom_point(aes(x=x.proj.white.2[,1],y=x.proj.white.1[,1])) + scale_x_continuous(limits=c(-4,4))  + scale_y_continuous(limits=c(-4,4))
ggplot(data.frame()) + geom_point(aes(x=x.proj.white[,1],y=x.proj.white.2[,1])) + scale_x_continuous(limits=c(-4,4))  + scale_y_continuous(limits=c(-4,4))
x.proj.white = x.center %*% svd.sample.cov$v %*% solve(diag(sqrt(svd.sample.cov$d)))
var(x.proj.white[,1])
var(x.proj.white[,2])
ggplot(data.frame()) + geom_point(aes(x=x.proj.white[,1],y=x.proj.white[,2])) + scale_x_continuous(limits=c(-4,4))  + scale_y_continuous(limits=c(-4,4)) + ggtitle("Whitening Transfrom")
w_sqrt = svd.sample.cov$u %*% diag(sqrt(svd.sample.cov$d)) %*% t(svd.sample.cov$v)
w_inv_sqrt = solve(w_sqrt)
w_inv_sqrt.2 = svd.sample.cov$u %*% solve(diag(sqrt(svd.sample.cov$d))) %*% t(svd.sample.cov$v)
x.proj.white.2= x.center %*% w_inv_sqrt.2
ggplot(data.frame()) + geom_point(aes(x=x.proj.white.2[,1],y=x.proj.white.2[,2])) + scale_x_continuous(limits=c(-4,4))  + scale_y_continuous(limits=c(-4,4)) + ggtitle("Whitening Transfrom 2")
ggplot(data.frame()) + geom_point(aes(x=x.proj.white[,1],y=x.proj.white.2[,1])) + scale_x_continuous(limits=c(-4,4))  + scale_y_continuous(limits=c(-4,4))
ggplot(data.frame()) + geom_point(aes(x=x.proj.white[,1],y=x.proj.white.2[,2])) + scale_x_continuous(limits=c(-4,4))  + scale_y_continuous(limits=c(-4,4))
t(x.center[1,]) %*% solve(S.sample) %*% x.center[1,]
t(x.center[1,]) %*% solve(S.sample) %*% x.center[1,]
sum(x.proj.white[1,]^2)
sum(x.proj.whit.2e[1,]^2)
sum(x.proj.white.2[1,]^2)
x.center[1,] %*% svd.sample.cov$v
x.center[1,] %*% svd.sample.cov$v %*% diag(svd.sample.cov$d)^-1
diag(svd.sample.cov$d)
diag(svd.sample.cov$d)^-1
solve(diag(svd.sample.cov$d))
x.center[1,] %*% svd.sample.cov$v %*% solve(diag(svd.sample.cov$d))
x.1.proj.scaled = x.center[1,] %*% svd.sample.cov$v %*% solve(diag(sqrt(svd.sample.cov$d)))
x.1.proj.scaled
sum(x.1.proj.scaled^2)
x.center[1,] %*% svd.sample.cov$v
x.center[1,] %*% t(svd.sample.cov$v)
svd.sample.cov$v
x.center[1,]
t(svd.sample.cov$v)
svd.sample.cov$v
svd.sample.cov$v %*% t(t(svd.sample.cov$v))
svd.sample.cov$v == t(t(svd.sample.cov$v))
diag(c(1.5,2))
diag(c(1.5,2))
x.center[1,] %*% svd.sample.cov$v
svd.sample.cov$v[,1]
sum(svd.sample.cov$v[,1]^2)
e.other = eigen(cov(t(x.center)))
e.other
dim(e.other$vectors)
e.other$vectors %*% e.other$vectors
e.other$vectors %*% t(e.other$vectors)
e.other$vectors[1:10,1:10]
e.other$vectors[1:20,1:20]
86 + 96 + 77 + 93
svd.sample.cov$v %*% t(x.center)
svd.sample.cov$v %*% t(x.center)
x.projection = svd.sample.cov$v %*% t(x.center)
dim(x.projection)
x.projection[1,]
svd.sample.cov$v[,1]
x.projection * svd.sample.cov$v
svd.sample.cov$v * x.projection
svd.sample.cov$v %*% x.projection
t(svd.sample.cov$v %*% x.projection)
cor(x.reconstruction[,1],x.center[,1])
x.reconstruction = t(svd.sample.cov$v %*% x.projection)
cor(x.reconstruction[,1],x.center[,1])
dim(x.projection)
t(svd.sample.cov$v %*% rbind(x.projection[1,], 0))
x.reconstruction.partial = t(svd.sample.cov$v %*% rbind(x.projection[1,], 0))
plot(x.reconstruction[,1],x.reconstruction.partial[,1])
plot(x.reconstruction[,2],x.reconstruction.partial[,2])
cor(x.reconstruction[,1],x.reconstruction.partial[,1])
cor(x.reconstruction[,2],x.reconstruction.partial[,2])
